package julian;

import java.io.File;
import java.io.IOException;
import java.util.*;

public class DfsAlgos {

    HashMap<Integer, Integer> assignedVertexColor;
    HashMap<Integer, Integer> parentNode;
    boolean circleDetected;
    LinkedList<Integer> list;

    private int getVertexColor(Integer v) {
        return this.assignedVertexColor.get(v);
    }
    private void setVertexColor(Integer v, int color) {
        this.assignedVertexColor.put(v, color);
    }
    private void setParentNode(Integer v, Integer u) {
        this.parentNode.put(v, u);
    }
    private Integer getParentNode(Integer v) {
        return this.parentNode.get(v);
    }


    public LinkedList<Integer> dfs(DirectedGraph g, boolean reconstructCircle) {

        this.parentNode = new HashMap<>();
        this.assignedVertexColor = new HashMap<>();
        this.circleDetected = false;
        this.list = new LinkedList<>();

        for(Integer v : g.getVertices()) {
            setVertexColor(v, 0);
        }

        for(Integer v : g.getVertices()) {

            if(circleDetected) {
                break;
            }

            if(getVertexColor(v) == 0) {
                dfsVisit(g, v, reconstructCircle);
            }
        }

        return this.list;
    }

    public void dfsVisit(DirectedGraph g, Integer u, boolean reconstructCircle) {

        setVertexColor(u, 1);

        for(Integer v : g.getNeighbors(u)) {
            setParentNode(v, u);

            if(getVertexColor(v) == 1) {
                circleDetected = true;
                if(reconstructCircle) {
                    this.list = constructCircle(v);
                }
                break;
            }

            if(getVertexColor(v) == 0) {
                dfsVisit(g, v, reconstructCircle);
            }
        }

        setVertexColor(u, 2);

        if(!reconstructCircle) {
            this.list.addFirst(u);
        }
    }

    public LinkedList<Integer> constructCircle(Integer startNode) {

        LinkedList<Integer> circle = new LinkedList<>();
        Integer currentNode = getParentNode(startNode);

        while(!Objects.equals(currentNode, startNode)) {
            circle.addFirst(currentNode);
            currentNode = getParentNode(currentNode);
        }

        circle.addFirst(startNode);
        return circle;
    }

    public LinkedList<Integer> topSort(DirectedGraph g) {

        LinkedList<Integer> output = dfs(g, false);

        if(circleDetected) {
            return null;
        }

        return output;
    }

    public LinkedList<Integer> detectCycle(DirectedGraph g) {

        LinkedList<Integer> output = dfs(g, true);

        if(!circleDetected) {
            return null;
        }

        return output;
    }




    public static void main(String[] args) throws IOException {

        //DirectedGraph graph = new DirectedGraph(new File("/Users/julian/Documents/AuD/Julian/src/resources/out.bnet_bnet.bnet"));
        //[10, 9, 5, 4, 3, 6, 2, 7, 1, 8]
        //null

        //DirectedGraph graph = new DirectedGraph(new File("/Users/julian/Documents/AuD/Julian/src/resources/out.maayan-figeys"));
        //[2238, 2237, 2236, 2235, 2234, 2233, 2232, 2231, 2230, 2229, 2228, 2227, 2226, 2225, 2223, 2222, 2221, 2220, 2219, 2218, 2217, 2216, 2215, 2214, 2213, 2212, 2210, 2208, 2207, 2206, 2205, 2204, 2203, 2202, 2201, 2200, 2199, 2198, 2197, 2196, 2195, 2194, 2193, 2192, 2191, 2190, 2189, 2188, 2187, 2186, 2185, 2184, 2183, 2182, 2181, 2180, 2179, 2178, 2177, 2176, 2175, 2174, 2173, 2172, 2171, 2170, 2169, 2166, 2164, 2163, 2162, 2161, 2160, 2159, 2153, 2152, 2151, 2150, 2149, 2148, 2147, 2146, 2145, 2144, 2143, 2140, 2138, 2137, 2135, 2133, 2132, 2130, 2129, 2128, 2127, 2126, 2125, 2123, 2122, 2121, 2120, 2119, 2118, 2117, 2116, 2115, 2114, 2113, 2112, 2111, 2110, 2109, 2108, 2107, 2106, 2105, 2104, 2102, 2101, 2100, 2095, 2094, 2093, 2092, 2091, 2090, 2089, 2088, 2087, 2086, 2085, 2084, 2083, 2082, 2080, 2079, 2078, 2077, 2076, 2075, 2074, 2073, 2072, 2071, 2069, 2066, 2065, 2064, 2063, 2062, 2061, 2060, 2058, 2057, 2056, 2054, 2053, 2052, 2051, 2050, 2049, 2048, 2047, 2046, 2045, 2044, 2043, 2042, 2041, 2040, 2039, 2038, 2037, 2036, 2035, 2034, 2033, 2032, 2031, 2030, 2029, 2028, 2027, 2026, 2025, 2024, 2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012, 2010, 2009, 2008, 2006, 2005, 2004, 2003, 2002, 2001, 2000, 1999, 1998, 1997, 1996, 1995, 1994, 1993, 1992, 1991, 1989, 1988, 1987, 1986, 1985, 1983, 1981, 1980, 1979, 1978, 1977, 1976, 1975, 1974, 1973, 1972, 1971, 1969, 1967, 1966, 1965, 1963, 1961, 1960, 1959, 1957, 1956, 1955, 1954, 1953, 1952, 1951, 1947, 1946, 1945, 1941, 1940, 1939, 1938, 1937, 1936, 1935, 1934, 1933, 1932, 1928, 1927, 1926, 1925, 1923, 1922, 1921, 1920, 1919, 1918, 1917, 1916, 1915, 1914, 1913, 1912, 1911, 1910, 1909, 1908, 1907, 1906, 1905, 1904, 1903, 1902, 1901, 1900, 1899, 1898, 1897, 1896, 1895, 1894, 1893, 1892, 1891, 1890, 1889, 1888, 1887, 1886, 1885, 1884, 1883, 1882, 1881, 1880, 1879, 1878, 1877, 1876, 1875, 1874, 1873, 1872, 1871, 1870, 1869, 1868, 1867, 1866, 1865, 1864, 1863, 1862, 1861, 1860, 1859, 1858, 1857, 1856, 1855, 1854, 1853, 1852, 1851, 1850, 1849, 1848, 1847, 1846, 1845, 1844, 1843, 1842, 1841, 1840, 1839, 1838, 1837, 1836, 1835, 1834, 1833, 1832, 1831, 1830, 1829, 1828, 1827, 1826, 1825, 1824, 1823, 1822, 1821, 1820, 1819, 1818, 1816, 1814, 1813, 1811, 1810, 1809, 1808, 1806, 1805, 1804, 1803, 1802, 1801, 1800, 1799, 1798, 1796, 1795, 1794, 1793, 1792, 1791, 1790, 1789, 1788, 1787, 1786, 1785, 1784, 1783, 1782, 1781, 1780, 1777, 1776, 1775, 1774, 1773, 1772, 1771, 1770, 1769, 1768, 1767, 1766, 1765, 1764, 1763, 1762, 1761, 1760, 1759, 1758, 1757, 1756, 1755, 1754, 1753, 1752, 1751, 1750, 1749, 1748, 1747, 1746, 1745, 1744, 1743, 1742, 1741, 1740, 1739, 1737, 1736, 1735, 1734, 1733, 1732, 1731, 1730, 1729, 1728, 1727, 1726, 1725, 1724, 1723, 1722, 1721, 1720, 1719, 1718, 1717, 1716, 1715, 1714, 1713, 1712, 1711, 1710, 1709, 1708, 1707, 1706, 1705, 1704, 1703, 1702, 1701, 1700, 1699, 1698, 1697, 1696, 1695, 1694, 1693, 1692, 1691, 1690, 1689, 1688, 1687, 1686, 1685, 1684, 1683, 1682, 1681, 1680, 1679, 1678, 1677, 1676, 1675, 1674, 1673, 1672, 1671, 1670, 1669, 1668, 1667, 1666, 1984, 1665, 1664, 1663, 1662, 1661, 1660, 1659, 1658, 1657, 1656, 1655, 1654, 1653, 1652, 1651, 1650, 1649, 1648, 1647, 1646, 1645, 1644, 1643, 1642, 1641, 1640, 1639, 1638, 1637, 1636, 1635, 1634, 1633, 1632, 1631, 1630, 1629, 1628, 1627, 1626, 1625, 1624, 1623, 2134, 1622, 1621, 1620, 1619, 1618, 1617, 1616, 1615, 1614, 1613, 1610, 1611, 1609, 1608, 1607, 1606, 1605, 1603, 1602, 1601, 1600, 1599, 1598, 1597, 1596, 1595, 1594, 1593, 1592, 1591, 1778, 1590, 1589, 1588, 1587, 1586, 1585, 1584, 1583, 1582, 1581, 1580, 1579, 1578, 1577, 1576, 1575, 1574, 1573, 1572, 1571, 1570, 1569, 1568, 1567, 1566, 1565, 1564, 1563, 1562, 1561, 1560, 1559, 1558, 1557, 1556, 1555, 1554, 1553, 1552, 1551, 1550, 1549, 1548, 1547, 1546, 1545, 1544, 1543, 1542, 1541, 1540, 1539, 1538, 1537, 1535, 1534, 1533, 1532, 1531, 1530, 1529, 1528, 1527, 1526, 1525, 1524, 1523, 1522, 1521, 1520, 1519, 1518, 1517, 1516, 1515, 1514, 1513, 1512, 1511, 1509, 1510, 1508, 1507, 1506, 1505, 1504, 1503, 1502, 1501, 1500, 1499, 1498, 1497, 1496, 1931, 1495, 1494, 1493, 1492, 1491, 1490, 1489, 1488, 1487, 1486, 1485, 1484, 1483, 1482, 1481, 1480, 1479, 1478, 1477, 1476, 1475, 1474, 1473, 1472, 1471, 1470, 1469, 1465, 1464, 1463, 1462, 1461, 1460, 1459, 1458, 1457, 1455, 1454, 1452, 1451, 1450, 1449, 1448, 1447, 1446, 1445, 1444, 1443, 1442, 1441, 1440, 1439, 1438, 1437, 1436, 1435, 1434, 1433, 1432, 1431, 1430, 1429, 1428, 1427, 1426, 1425, 1424, 1423, 1422, 1421, 1420, 1419, 1418, 1417, 1416, 1415, 1414, 1413, 1412, 1411, 1410, 1408, 1407, 1406, 1405, 1404, 1403, 1402, 1401, 1400, 1399, 1398, 1397, 1396, 1394, 1393, 1392, 1391, 1390, 1389, 1388, 1387, 1386, 1385, 1384, 1383, 1382, 1381, 1380, 1379, 1378, 1377, 1376, 1375, 1374, 1373, 1372, 1371, 1370, 1369, 1368, 1367, 1366, 1365, 1364, 1363, 1362, 1361, 1360, 1359, 1358, 1357, 1355, 1354, 1353, 1352, 1351, 1350, 1349, 1348, 1347, 1346, 1345, 1344, 1343, 1342, 1341, 1340, 1339, 1338, 1337, 1336, 1335, 1334, 1333, 1612, 1331, 1330, 1329, 1328, 1327, 1326, 1325, 1324, 1323, 1321, 1320, 1319, 1318, 1317, 1316, 1314, 1313, 1312, 1311, 1310, 1309, 1308, 1307, 1306, 1305, 1304, 1303, 1302, 1301, 1300, 1299, 1298, 1297, 1296, 1295, 1294, 1293, 1292, 1291, 1290, 1289, 1288, 1287, 1286, 1285, 1284, 1283, 1282, 1281, 1280, 1279, 1278, 1277, 1276, 1275, 1274, 1273, 1272, 1271, 1270, 1269, 1268, 1266, 1265, 1264, 1263, 1262, 1261, 1260, 1259, 1258, 1257, 1256, 1253, 1252, 1251, 1250, 1248, 1247, 1246, 1245, 1244, 1243, 1242, 1239, 1238, 1237, 1236, 1235, 1234, 1233, 1232, 1231, 1229, 1228, 1226, 1225, 1224, 1223, 1222, 1221, 1220, 1219, 1218, 1217, 1216, 1215, 1214, 1213, 1212, 1211, 1210, 1209, 1208, 1207, 1206, 1205, 1204, 1203, 1202, 1201, 1200, 1199, 1197, 1196, 1195, 1194, 1193, 1192, 1191, 1190, 1189, 1188, 1187, 1186, 1185, 1184, 1183, 1182, 1181, 1180, 1179, 1178, 1177, 1176, 1175, 1174, 1173, 1172, 1171, 1170, 1169, 1168, 1166, 1165, 1163, 1161, 1160, 1159, 1158, 2011, 1157, 1156, 2155, 1155, 1154, 1153, 1152, 1150, 1149, 1148, 1147, 1146, 1145, 1144, 1143, 1142, 1141, 1140, 1139, 1138, 1137, 1136, 1135, 1134, 1133, 1132, 1131, 1130, 1129, 1128, 1127, 1126, 1125, 1124, 1123, 1122, 1121, 1120, 1118, 1117, 1116, 1115, 1114, 1113, 1112, 1111, 1110, 1108, 1107, 1106, 1104, 1103, 1162, 1102, 1100, 1099, 1098, 1097, 1096, 1094, 1093, 1092, 1091, 1090, 1089, 1088, 1087, 1086, 1085, 1084, 1083, 1082, 1081, 1080, 1079, 1078, 2067, 1077, 1076, 1073, 1072, 1070, 1068, 1067, 1066, 1065, 1062, 1061, 1060, 1059, 1058, 1056, 1054, 1053, 1052, 1051, 2157, 1050, 1049, 1048, 1047, 1046, 1045, 1044, 1043, 1042, 1041, 1040, 1039, 1038, 1037, 1036, 1035, 1034, 1033, 1031, 1030, 1029, 1027, 1026, 1025, 1024, 1023, 1022, 1021, 1020, 1019, 1018, 1017, 1016, 1015, 1014, 1013, 1012, 1011, 1010, 1009, 1008, 1007, 1004, 1003, 1002, 1001, 1000, 999, 998, 997, 996, 995, 994, 993, 992, 991, 990, 989, 988, 987, 986, 985, 984, 983, 982, 981, 980, 979, 978, 977, 975, 974, 973, 972, 971, 969, 968, 967, 966, 965, 964, 963, 962, 961, 960, 959, 957, 956, 955, 954, 953, 951, 950, 949, 947, 946, 945, 944, 943, 1005, 941, 940, 939, 938, 937, 936, 934, 933, 931, 932, 930, 928, 927, 926, 925, 924, 923, 922, 920, 918, 917, 915, 916, 914, 913, 912, 911, 910, 909, 908, 907, 1249, 906, 905, 904, 902, 901, 899, 898, 897, 896, 895, 894, 893, 892, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 2096, 880, 879, 878, 877, 1944, 876, 875, 874, 873, 871, 870, 868, 867, 866, 865, 864, 863, 862, 861, 1057, 860, 858, 857, 856, 855, 854, 853, 852, 851, 850, 849, 848, 847, 845, 844, 843, 842, 841, 839, 838, 837, 836, 835, 834, 833, 832, 831, 830, 829, 1255, 828, 827, 826, 825, 824, 823, 822, 1968, 820, 819, 818, 817, 816, 815, 1055, 814, 813, 812, 811, 810, 809, 808, 807, 1101, 805, 804, 803, 802, 801, 1241, 800, 799, 798, 797, 796, 795, 793, 792, 791, 789, 788, 787, 786, 785, 784, 782, 780, 779, 2139, 778, 777, 776, 775, 774, 859, 773, 772, 771, 2070, 770, 769, 768, 767, 2167, 765, 764, 840, 763, 762, 760, 759, 758, 757, 756, 755, 754, 753, 752, 751, 749, 748, 747, 746, 745, 744, 743, 742, 740, 739, 738, 736, 735, 734, 732, 733, 731, 730, 1032, 728, 727, 726, 725, 724, 723, 722, 721, 2099, 720, 719, 718, 717, 715, 714, 712, 710, 711, 1006, 709, 708, 707, 706, 705, 704, 702, 701, 700, 699, 698, 869, 696, 1071, 695, 694, 693, 691, 1069, 690, 689, 688, 687, 686, 685, 684, 683, 682, 681, 680, 679, 678, 677, 676, 675, 674, 673, 672, 671, 669, 668, 667, 666, 665, 664, 663, 662, 661, 660, 659, 658, 657, 656, 655, 654, 653, 652, 2136, 651, 650, 649, 648, 647, 646, 645, 642, 641, 640, 639, 638, 637, 636, 635, 1536, 634, 633, 632, 631, 630, 629, 628, 627, 626, 625, 624, 1322, 623, 622, 621, 620, 618, 617, 616, 615, 614, 613, 612, 610, 611, 609, 1109, 608, 741, 606, 605, 604, 603, 602, 601, 600, 599, 598, 597, 596, 595, 594, 593, 592, 591, 590, 589, 588, 585, 584, 583, 582, 581, 580, 579, 578, 1356, 577, 976, 576, 575, 574, 573, 1240, 572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 561, 560, 559, 558, 556, 555, 554, 553, 552, 551, 550, 548, 549, 547, 545, 546, 544, 543, 542, 540, 539, 538, 537, 536, 535, 534, 533, 2081, 532, 531, 530, 529, 528, 527, 525, 524, 523, 522, 521, 520, 519, 518, 517, 516, 1028, 515, 514, 513, 512, 511, 510, 958, 509, 508, 507, 506, 505, 504, 503, 502, 501, 500, 1942, 499, 498, 497, 1964, 496, 495, 494, 493, 492, 491, 490, 489, 488, 486, 485, 484, 483, 482, 481, 479, 478, 477, 476, 475, 474, 473, 472, 471, 470, 469, 900, 468, 466, 465, 464, 463, 942, 462, 1151, 461, 1075, 460, 459, 458, 457, 929, 456, 454, 455, 453, 452, 451, 450, 449, 447, 872, 446, 445, 444, 443, 557, 442, 2059, 441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429, 448, 2154, 428, 427, 426, 425, 424, 423, 422, 421, 419, 418, 417, 416, 415, 414, 413, 412, 411, 729, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 1812, 400, 399, 398, 397, 396, 395, 394, 393, 392, 1254, 391, 390, 389, 970, 388, 387, 386, 385, 384, 383, 382, 381, 1063, 380, 379, 378, 919, 377, 821, 376, 375, 374, 373, 372, 806, 371, 370, 369, 368, 367, 1105, 366, 365, 364, 363, 697, 362, 2055, 361, 360, 359, 1815, 358, 357, 356, 355, 354, 353, 352, 1958, 351, 350, 349, 348, 1604, 347, 346, 2142, 345, 344, 1949, 343, 342, 341, 1167, 340, 338, 337, 587, 336, 335, 2097, 334, 333, 332, 670, 331, 330, 619, 329, 328, 327, 326, 325, 1970, 324, 323, 322, 321, 716, 320, 318, 317, 316, 315, 314, 1267, 313, 312, 2165, 311, 310, 1409, 309, 308, 766, 307, 306, 305, 304, 303, 1119, 302, 301, 300, 299, 297, 296, 1950, 295, 293, 292, 291, 737, 290, 1164, 289, 339, 288, 286, 284, 2103, 283, 282, 281, 319, 280, 279, 278, 692, 277, 276, 275, 274, 273, 713, 272, 2168, 271, 270, 269, 643, 267, 1095, 266, 265, 264, 541, 263, 262, 2211, 261, 260, 259, 258, 467, 257, 256, 255, 254, 1982, 253, 251, 250, 248, 249, 247, 246, 245, 244, 243, 1064, 242, 241, 240, 239, 1456, 238, 237, 236, 235, 234, 233, 232, 231, 230, 790, 229, 228, 227, 226, 225, 224, 223, 222, 221, 1943, 220, 219, 218, 217, 287, 216, 215, 214, 213, 212, 487, 211, 210, 480, 209, 208, 207, 206, 205, 952, 204, 203, 794, 202, 201, 761, 200, 199, 198, 197, 196, 1948, 195, 194, 193, 192, 191, 1198, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 903, 180, 179, 178, 177, 176, 175, 174, 173, 172, 935, 171, 170, 169, 168, 167, 165, 164, 163, 162, 161, 160, 159, 2124, 158, 157, 156, 155, 2068, 154, 152, 151, 2224, 150, 149, 148, 147, 146, 144, 143, 607, 142, 141, 140, 139, 138, 137, 1467, 136, 135, 134, 750, 133, 132, 586, 131, 130, 129, 1738, 128, 127, 2156, 126, 125, 124, 2209, 123, 122, 121, 120, 119, 1453, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 420, 103, 1924, 102, 101, 166, 100, 99, 98, 145, 97, 96, 95, 268, 94, 93, 92, 91, 1074, 90, 2098, 89, 88, 526, 87, 86, 644, 85, 84, 1315, 83, 82, 81, 80, 1230, 79, 78, 1395, 77, 1930, 76, 75, 2007, 74, 73, 294, 1227, 72, 71, 70, 69, 68, 1332, 67, 2131, 66, 65, 783, 64, 63, 153, 62, 61, 60, 703, 59, 58, 57, 1817, 56, 55, 54, 53, 252, 52, 51, 1779, 50, 1990, 48, 47, 46, 891, 45, 44, 43, 42, 41, 40, 846, 39, 38, 2141, 37, 36, 35, 2158, 34, 781, 33, 298, 32, 31, 30, 921, 29, 285, 28, 27, 26, 25, 24, 1468, 23, 22, 21, 20, 49, 19, 18, 17, 16, 1797, 15, 14, 13, 12, 1466, 11, 10, 2239, 9, 8, 1807, 7, 6, 5, 1962, 4, 3, 948, 2, 1, 1929]
        //null

        //DirectedGraph graph = new DirectedGraph(new File("/Users/julian/Documents/AuD/Julian/src/resources/out.moreno_dense_comm"));
        //[55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
        //null

        //DirectedGraph graph = new DirectedGraph(new File("/Users/julian/Documents/AuD/Julian/src/resources/out.moreno_taro_taro"));
        //[22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
        //null

        //DirectedGraph graph = new DirectedGraph(new File("/Users/julian/Documents/AuD/Julian/src/resources/out.simple_simple.simple"));
        //[112, 111, 110, 109, 108, 107, 106, 104, 103, 102, 101, 100, 99, 96, 95, 94, 93, 92, 90, 89, 86, 85, 84, 82, 81, 80, 79, 78, 98, 77, 76, 75, 74, 83, 73, 71, 70, 69, 68, 88, 65, 64, 63, 62, 61, 60, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 46, 45, 44, 43, 41, 40, 39, 42, 38, 37, 36, 35, 34, 33, 32, 31, 29, 28, 27, 26, 25, 87, 24, 23, 22, 21, 20, 18, 17, 16, 15, 66, 14, 67, 13, 72, 12, 11, 30, 10, 105, 59, 9, 8, 7, 6, 5, 4, 47, 3, 2, 91, 1, 97, 19]
        //null


        DfsAlgos dfsAlgos = new DfsAlgos();
        System.out.println(dfsAlgos.topSort(graph));
        System.out.println(dfsAlgos.detectCycle(graph));

    }
}
